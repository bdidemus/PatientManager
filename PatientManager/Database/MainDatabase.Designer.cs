//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PatientManagerModel", "doctorpatient", "doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.doctor), "patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.patient), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "patientcountry", "patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.patient), "country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientManager.Database.country), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "invoiceinv_line", "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.invoice), "inv_line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.inv_line), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "inventoryinv_line", "inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.inventory), "inv_line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.inv_line), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "patientappointment", "patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientManager.Database.patient), "appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.appointment), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "doctorappointment", "doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientManager.Database.doctor), "appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.appointment), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "doctordoc_type", "doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.doctor), "doc_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientManager.Database.doc_type), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "invoicepatient", "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.invoice), "patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.patient), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "inventorycategory", "inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.inventory), "category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientManager.Database.category), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "paymentpatient", "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.payment), "patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.patient), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "payment_typepayment", "payment_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.payment_type), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.payment), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "AccountingTotaldoctor", "AccountingTotal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.AccountingTotal), "doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.doctor), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "invoicedoctor", "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.invoice), "doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.doctor), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "paymentdoctor", "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.payment), "doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.doctor), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "PatientAccountHistoryViewpatient", "PatientAccountHistoryView", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.PatientAccountHistoryView), "patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.patient), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "paymentinvoice", "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.payment), "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientManager.Database.invoice), true)]
[assembly: EdmRelationshipAttribute("PatientManagerModel", "PatientAccountHistoryViewdoctor", "PatientAccountHistoryView", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientManager.Database.PatientAccountHistoryView), "doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientManager.Database.doctor), true)]

#endregion

namespace PatientManager.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PatientManagerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PatientManagerEntities object using the connection string found in the 'PatientManagerEntities' section of the application configuration file.
        /// </summary>
        public PatientManagerEntities() : base("name=PatientManagerEntities", "PatientManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PatientManagerEntities object.
        /// </summary>
        public PatientManagerEntities(string connectionString) : base(connectionString, "PatientManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PatientManagerEntities object.
        /// </summary>
        public PatientManagerEntities(EntityConnection connection) : base(connection, "PatientManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<appointment> appointments
        {
            get
            {
                if ((_appointments == null))
                {
                    _appointments = base.CreateObjectSet<appointment>("appointments");
                }
                return _appointments;
            }
        }
        private ObjectSet<appointment> _appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<category> categories
        {
            get
            {
                if ((_categories == null))
                {
                    _categories = base.CreateObjectSet<category>("categories");
                }
                return _categories;
            }
        }
        private ObjectSet<category> _categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<country> countries
        {
            get
            {
                if ((_countries == null))
                {
                    _countries = base.CreateObjectSet<country>("countries");
                }
                return _countries;
            }
        }
        private ObjectSet<country> _countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<doc_type> doc_type
        {
            get
            {
                if ((_doc_type == null))
                {
                    _doc_type = base.CreateObjectSet<doc_type>("doc_type");
                }
                return _doc_type;
            }
        }
        private ObjectSet<doc_type> _doc_type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<doctor> doctors
        {
            get
            {
                if ((_doctors == null))
                {
                    _doctors = base.CreateObjectSet<doctor>("doctors");
                }
                return _doctors;
            }
        }
        private ObjectSet<doctor> _doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<inv_line> inv_line
        {
            get
            {
                if ((_inv_line == null))
                {
                    _inv_line = base.CreateObjectSet<inv_line>("inv_line");
                }
                return _inv_line;
            }
        }
        private ObjectSet<inv_line> _inv_line;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<inventory> inventories
        {
            get
            {
                if ((_inventories == null))
                {
                    _inventories = base.CreateObjectSet<inventory>("inventories");
                }
                return _inventories;
            }
        }
        private ObjectSet<inventory> _inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoice> invoices
        {
            get
            {
                if ((_invoices == null))
                {
                    _invoices = base.CreateObjectSet<invoice>("invoices");
                }
                return _invoices;
            }
        }
        private ObjectSet<invoice> _invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<loginuser> loginusers
        {
            get
            {
                if ((_loginusers == null))
                {
                    _loginusers = base.CreateObjectSet<loginuser>("loginusers");
                }
                return _loginusers;
            }
        }
        private ObjectSet<loginuser> _loginusers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<patient> patients
        {
            get
            {
                if ((_patients == null))
                {
                    _patients = base.CreateObjectSet<patient>("patients");
                }
                return _patients;
            }
        }
        private ObjectSet<patient> _patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<reminder> reminders
        {
            get
            {
                if ((_reminders == null))
                {
                    _reminders = base.CreateObjectSet<reminder>("reminders");
                }
                return _reminders;
            }
        }
        private ObjectSet<reminder> _reminders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usr_reminder> usr_reminder
        {
            get
            {
                if ((_usr_reminder == null))
                {
                    _usr_reminder = base.CreateObjectSet<usr_reminder>("usr_reminder");
                }
                return _usr_reminder;
            }
        }
        private ObjectSet<usr_reminder> _usr_reminder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<payment_type> payment_type
        {
            get
            {
                if ((_payment_type == null))
                {
                    _payment_type = base.CreateObjectSet<payment_type>("payment_type");
                }
                return _payment_type;
            }
        }
        private ObjectSet<payment_type> _payment_type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<payment> payments
        {
            get
            {
                if ((_payments == null))
                {
                    _payments = base.CreateObjectSet<payment>("payments");
                }
                return _payments;
            }
        }
        private ObjectSet<payment> _payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountingTotal> AccountingTotals
        {
            get
            {
                if ((_AccountingTotals == null))
                {
                    _AccountingTotals = base.CreateObjectSet<AccountingTotal>("AccountingTotals");
                }
                return _AccountingTotals;
            }
        }
        private ObjectSet<AccountingTotal> _AccountingTotals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientAccountHistoryView> PatientAccountHistoryViews
        {
            get
            {
                if ((_PatientAccountHistoryViews == null))
                {
                    _PatientAccountHistoryViews = base.CreateObjectSet<PatientAccountHistoryView>("PatientAccountHistoryViews");
                }
                return _PatientAccountHistoryViews;
            }
        }
        private ObjectSet<PatientAccountHistoryView> _PatientAccountHistoryViews;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToappointments(appointment appointment)
        {
            base.AddObject("appointments", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocategories(category category)
        {
            base.AddObject("categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocountries(country country)
        {
            base.AddObject("countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the doc_type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodoc_type(doc_type doc_type)
        {
            base.AddObject("doc_type", doc_type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodoctors(doctor doctor)
        {
            base.AddObject("doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the inv_line EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinv_line(inv_line inv_line)
        {
            base.AddObject("inv_line", inv_line);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinventories(inventory inventory)
        {
            base.AddObject("inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoices(invoice invoice)
        {
            base.AddObject("invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the loginusers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTologinusers(loginuser loginuser)
        {
            base.AddObject("loginusers", loginuser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopatients(patient patient)
        {
            base.AddObject("patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the reminders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToreminders(reminder reminder)
        {
            base.AddObject("reminders", reminder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usr_reminder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousr_reminder(usr_reminder usr_reminder)
        {
            base.AddObject("usr_reminder", usr_reminder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the payment_type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopayment_type(payment_type payment_type)
        {
            base.AddObject("payment_type", payment_type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopayments(payment payment)
        {
            base.AddObject("payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountingTotals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountingTotals(AccountingTotal accountingTotal)
        {
            base.AddObject("AccountingTotals", accountingTotal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientAccountHistoryViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientAccountHistoryViews(PatientAccountHistoryView patientAccountHistoryView)
        {
            base.AddObject("PatientAccountHistoryViews", patientAccountHistoryView);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="AccountingTotal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountingTotal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountingTotal object.
        /// </summary>
        /// <param name="docID">Initial value of the docID property.</param>
        /// <param name="tYPE">Initial value of the TYPE property.</param>
        public static AccountingTotal CreateAccountingTotal(global::System.Int32 docID, global::System.String tYPE)
        {
            AccountingTotal accountingTotal = new AccountingTotal();
            accountingTotal.docID = docID;
            accountingTotal.TYPE = tYPE;
            return accountingTotal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _total;
        partial void OntotalChanging(Nullable<global::System.Decimal> value);
        partial void OntotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docID
        {
            get
            {
                return _docID;
            }
            set
            {
                OndocIDChanging(value);
                ReportPropertyChanging("docID");
                _docID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docID");
                OndocIDChanged();
            }
        }
        private global::System.Int32 _docID;
        partial void OndocIDChanging(global::System.Int32 value);
        partial void OndocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                if (_TYPE != value)
                {
                    OnTYPEChanging(value);
                    ReportPropertyChanging("TYPE");
                    _TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TYPE");
                    OnTYPEChanged();
                }
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "AccountingTotaldoctor", "doctor")]
        public doctor doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.AccountingTotaldoctor", "doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.AccountingTotaldoctor", "doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<doctor> doctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.AccountingTotaldoctor", "doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<doctor>("PatientManagerModel.AccountingTotaldoctor", "doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new appointment object.
        /// </summary>
        /// <param name="appID">Initial value of the appID property.</param>
        /// <param name="appDate">Initial value of the appDate property.</param>
        /// <param name="appDateCreate">Initial value of the appDateCreate property.</param>
        /// <param name="appStatusID">Initial value of the appStatusID property.</param>
        /// <param name="appDuration">Initial value of the appDuration property.</param>
        public static appointment Createappointment(global::System.Int32 appID, global::System.DateTime appDate, global::System.DateTime appDateCreate, global::System.Int32 appStatusID, global::System.Int32 appDuration)
        {
            appointment appointment = new appointment();
            appointment.appID = appID;
            appointment.appDate = appDate;
            appointment.appDateCreate = appDateCreate;
            appointment.appStatusID = appStatusID;
            appointment.appDuration = appDuration;
            return appointment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 appID
        {
            get
            {
                return _appID;
            }
            set
            {
                if (_appID != value)
                {
                    OnappIDChanging(value);
                    ReportPropertyChanging("appID");
                    _appID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("appID");
                    OnappIDChanged();
                }
            }
        }
        private global::System.Int32 _appID;
        partial void OnappIDChanging(global::System.Int32 value);
        partial void OnappIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime appDate
        {
            get
            {
                return _appDate;
            }
            set
            {
                OnappDateChanging(value);
                ReportPropertyChanging("appDate");
                _appDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("appDate");
                OnappDateChanged();
            }
        }
        private global::System.DateTime _appDate;
        partial void OnappDateChanging(global::System.DateTime value);
        partial void OnappDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String appNote
        {
            get
            {
                return _appNote;
            }
            set
            {
                OnappNoteChanging(value);
                ReportPropertyChanging("appNote");
                _appNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("appNote");
                OnappNoteChanged();
            }
        }
        private global::System.String _appNote;
        partial void OnappNoteChanging(global::System.String value);
        partial void OnappNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> patID
        {
            get
            {
                return _patID;
            }
            set
            {
                OnpatIDChanging(value);
                ReportPropertyChanging("patID");
                _patID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patID");
                OnpatIDChanged();
            }
        }
        private Nullable<global::System.Int32> _patID;
        partial void OnpatIDChanging(Nullable<global::System.Int32> value);
        partial void OnpatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> docID
        {
            get
            {
                return _docID;
            }
            set
            {
                OndocIDChanging(value);
                ReportPropertyChanging("docID");
                _docID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docID");
                OndocIDChanged();
            }
        }
        private Nullable<global::System.Int32> _docID;
        partial void OndocIDChanging(Nullable<global::System.Int32> value);
        partial void OndocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime appDateCreate
        {
            get
            {
                return _appDateCreate;
            }
            set
            {
                OnappDateCreateChanging(value);
                ReportPropertyChanging("appDateCreate");
                _appDateCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("appDateCreate");
                OnappDateCreateChanged();
            }
        }
        private global::System.DateTime _appDateCreate;
        partial void OnappDateCreateChanging(global::System.DateTime value);
        partial void OnappDateCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 appStatusID
        {
            get
            {
                return _appStatusID;
            }
            set
            {
                OnappStatusIDChanging(value);
                ReportPropertyChanging("appStatusID");
                _appStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("appStatusID");
                OnappStatusIDChanged();
            }
        }
        private global::System.Int32 _appStatusID;
        partial void OnappStatusIDChanging(global::System.Int32 value);
        partial void OnappStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> appAutoRenew
        {
            get
            {
                return _appAutoRenew;
            }
            set
            {
                OnappAutoRenewChanging(value);
                ReportPropertyChanging("appAutoRenew");
                _appAutoRenew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("appAutoRenew");
                OnappAutoRenewChanged();
            }
        }
        private Nullable<global::System.Boolean> _appAutoRenew;
        partial void OnappAutoRenewChanging(Nullable<global::System.Boolean> value);
        partial void OnappAutoRenewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> appRenewIntervalID
        {
            get
            {
                return _appRenewIntervalID;
            }
            set
            {
                OnappRenewIntervalIDChanging(value);
                ReportPropertyChanging("appRenewIntervalID");
                _appRenewIntervalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("appRenewIntervalID");
                OnappRenewIntervalIDChanged();
            }
        }
        private Nullable<global::System.Int32> _appRenewIntervalID;
        partial void OnappRenewIntervalIDChanging(Nullable<global::System.Int32> value);
        partial void OnappRenewIntervalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 appDuration
        {
            get
            {
                return _appDuration;
            }
            set
            {
                OnappDurationChanging(value);
                ReportPropertyChanging("appDuration");
                _appDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("appDuration");
                OnappDurationChanged();
            }
        }
        private global::System.Int32 _appDuration;
        partial void OnappDurationChanging(global::System.Int32 value);
        partial void OnappDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String appColour
        {
            get
            {
                return _appColour;
            }
            set
            {
                OnappColourChanging(value);
                ReportPropertyChanging("appColour");
                _appColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("appColour");
                OnappColourChanged();
            }
        }
        private global::System.String _appColour;
        partial void OnappColourChanging(global::System.String value);
        partial void OnappColourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usrName
        {
            get
            {
                return _usrName;
            }
            set
            {
                OnusrNameChanging(value);
                ReportPropertyChanging("usrName");
                _usrName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usrName");
                OnusrNameChanged();
            }
        }
        private global::System.String _usrName;
        partial void OnusrNameChanging(global::System.String value);
        partial void OnusrNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> itryID
        {
            get
            {
                return _itryID;
            }
            set
            {
                OnitryIDChanging(value);
                ReportPropertyChanging("itryID");
                _itryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itryID");
                OnitryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _itryID;
        partial void OnitryIDChanging(Nullable<global::System.Int32> value);
        partial void OnitryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "patientappointment", "patient")]
        public patient patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.patientappointment", "patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.patientappointment", "patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<patient> patientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.patientappointment", "patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<patient>("PatientManagerModel.patientappointment", "patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "doctorappointment", "doctor")]
        public doctor doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.doctorappointment", "doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.doctorappointment", "doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<doctor> doctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.doctorappointment", "doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<doctor>("PatientManagerModel.doctorappointment", "doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new category object.
        /// </summary>
        /// <param name="catID">Initial value of the catID property.</param>
        /// <param name="catDesc">Initial value of the catDesc property.</param>
        public static category Createcategory(global::System.Int32 catID, global::System.String catDesc)
        {
            category category = new category();
            category.catID = catID;
            category.catDesc = catDesc;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 catID
        {
            get
            {
                return _catID;
            }
            set
            {
                if (_catID != value)
                {
                    OncatIDChanging(value);
                    ReportPropertyChanging("catID");
                    _catID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("catID");
                    OncatIDChanged();
                }
            }
        }
        private global::System.Int32 _catID;
        partial void OncatIDChanging(global::System.Int32 value);
        partial void OncatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String catDesc
        {
            get
            {
                return _catDesc;
            }
            set
            {
                OncatDescChanging(value);
                ReportPropertyChanging("catDesc");
                _catDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("catDesc");
                OncatDescChanged();
            }
        }
        private global::System.String _catDesc;
        partial void OncatDescChanging(global::System.String value);
        partial void OncatDescChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "inventorycategory", "inventory")]
        public EntityCollection<inventory> inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inventory>("PatientManagerModel.inventorycategory", "inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inventory>("PatientManagerModel.inventorycategory", "inventory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new country object.
        /// </summary>
        /// <param name="iso">Initial value of the iso property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="printable_name">Initial value of the printable_name property.</param>
        public static country Createcountry(global::System.String iso, global::System.String name, global::System.String printable_name)
        {
            country country = new country();
            country.iso = iso;
            country.name = name;
            country.printable_name = printable_name;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iso
        {
            get
            {
                return _iso;
            }
            set
            {
                if (_iso != value)
                {
                    OnisoChanging(value);
                    ReportPropertyChanging("iso");
                    _iso = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("iso");
                    OnisoChanged();
                }
            }
        }
        private global::System.String _iso;
        partial void OnisoChanging(global::System.String value);
        partial void OnisoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String printable_name
        {
            get
            {
                return _printable_name;
            }
            set
            {
                Onprintable_nameChanging(value);
                ReportPropertyChanging("printable_name");
                _printable_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("printable_name");
                Onprintable_nameChanged();
            }
        }
        private global::System.String _printable_name;
        partial void Onprintable_nameChanging(global::System.String value);
        partial void Onprintable_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso3
        {
            get
            {
                return _iso3;
            }
            set
            {
                Oniso3Changing(value);
                ReportPropertyChanging("iso3");
                _iso3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iso3");
                Oniso3Changed();
            }
        }
        private global::System.String _iso3;
        partial void Oniso3Changing(global::System.String value);
        partial void Oniso3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> numcode
        {
            get
            {
                return _numcode;
            }
            set
            {
                OnnumcodeChanging(value);
                ReportPropertyChanging("numcode");
                _numcode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("numcode");
                OnnumcodeChanged();
            }
        }
        private Nullable<global::System.Int16> _numcode;
        partial void OnnumcodeChanging(Nullable<global::System.Int16> value);
        partial void OnnumcodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "patientcountry", "patient")]
        public EntityCollection<patient> patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<patient>("PatientManagerModel.patientcountry", "patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<patient>("PatientManagerModel.patientcountry", "patient", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="doc_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class doc_type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new doc_type object.
        /// </summary>
        /// <param name="docTypeID">Initial value of the docTypeID property.</param>
        /// <param name="dtDec">Initial value of the dtDec property.</param>
        public static doc_type Createdoc_type(global::System.Int32 docTypeID, global::System.String dtDec)
        {
            doc_type doc_type = new doc_type();
            doc_type.docTypeID = docTypeID;
            doc_type.dtDec = dtDec;
            return doc_type;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docTypeID
        {
            get
            {
                return _docTypeID;
            }
            set
            {
                if (_docTypeID != value)
                {
                    OndocTypeIDChanging(value);
                    ReportPropertyChanging("docTypeID");
                    _docTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("docTypeID");
                    OndocTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _docTypeID;
        partial void OndocTypeIDChanging(global::System.Int32 value);
        partial void OndocTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dtDec
        {
            get
            {
                return _dtDec;
            }
            set
            {
                OndtDecChanging(value);
                ReportPropertyChanging("dtDec");
                _dtDec = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("dtDec");
                OndtDecChanged();
            }
        }
        private global::System.String _dtDec;
        partial void OndtDecChanging(global::System.String value);
        partial void OndtDecChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "doctordoc_type", "doctor")]
        public EntityCollection<doctor> doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<doctor>("PatientManagerModel.doctordoc_type", "doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<doctor>("PatientManagerModel.doctordoc_type", "doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new doctor object.
        /// </summary>
        /// <param name="docID">Initial value of the docID property.</param>
        /// <param name="docFirstName">Initial value of the docFirstName property.</param>
        /// <param name="docDateCreated">Initial value of the docDateCreated property.</param>
        public static doctor Createdoctor(global::System.Int32 docID, global::System.String docFirstName, global::System.DateTime docDateCreated)
        {
            doctor doctor = new doctor();
            doctor.docID = docID;
            doctor.docFirstName = docFirstName;
            doctor.docDateCreated = docDateCreated;
            return doctor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docID
        {
            get
            {
                return _docID;
            }
            set
            {
                if (_docID != value)
                {
                    OndocIDChanging(value);
                    ReportPropertyChanging("docID");
                    _docID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("docID");
                    OndocIDChanged();
                }
            }
        }
        private global::System.Int32 _docID;
        partial void OndocIDChanging(global::System.Int32 value);
        partial void OndocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String docFirstName
        {
            get
            {
                return _docFirstName;
            }
            set
            {
                OndocFirstNameChanging(value);
                ReportPropertyChanging("docFirstName");
                _docFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("docFirstName");
                OndocFirstNameChanged();
            }
        }
        private global::System.String _docFirstName;
        partial void OndocFirstNameChanging(global::System.String value);
        partial void OndocFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docLastName
        {
            get
            {
                return _docLastName;
            }
            set
            {
                OndocLastNameChanging(value);
                ReportPropertyChanging("docLastName");
                _docLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docLastName");
                OndocLastNameChanged();
            }
        }
        private global::System.String _docLastName;
        partial void OndocLastNameChanging(global::System.String value);
        partial void OndocLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docAddress
        {
            get
            {
                return _docAddress;
            }
            set
            {
                OndocAddressChanging(value);
                ReportPropertyChanging("docAddress");
                _docAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docAddress");
                OndocAddressChanged();
            }
        }
        private global::System.String _docAddress;
        partial void OndocAddressChanging(global::System.String value);
        partial void OndocAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docCity
        {
            get
            {
                return _docCity;
            }
            set
            {
                OndocCityChanging(value);
                ReportPropertyChanging("docCity");
                _docCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docCity");
                OndocCityChanged();
            }
        }
        private global::System.String _docCity;
        partial void OndocCityChanging(global::System.String value);
        partial void OndocCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso
        {
            get
            {
                return _iso;
            }
            set
            {
                OnisoChanging(value);
                ReportPropertyChanging("iso");
                _iso = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iso");
                OnisoChanged();
            }
        }
        private global::System.String _iso;
        partial void OnisoChanging(global::System.String value);
        partial void OnisoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docPCode
        {
            get
            {
                return _docPCode;
            }
            set
            {
                OndocPCodeChanging(value);
                ReportPropertyChanging("docPCode");
                _docPCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docPCode");
                OndocPCodeChanged();
            }
        }
        private global::System.String _docPCode;
        partial void OndocPCodeChanging(global::System.String value);
        partial void OndocPCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docOfficeNumber
        {
            get
            {
                return _docOfficeNumber;
            }
            set
            {
                OndocOfficeNumberChanging(value);
                ReportPropertyChanging("docOfficeNumber");
                _docOfficeNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docOfficeNumber");
                OndocOfficeNumberChanged();
            }
        }
        private global::System.String _docOfficeNumber;
        partial void OndocOfficeNumberChanging(global::System.String value);
        partial void OndocOfficeNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dovSecondaryNumber
        {
            get
            {
                return _dovSecondaryNumber;
            }
            set
            {
                OndovSecondaryNumberChanging(value);
                ReportPropertyChanging("dovSecondaryNumber");
                _dovSecondaryNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dovSecondaryNumber");
                OndovSecondaryNumberChanged();
            }
        }
        private global::System.String _dovSecondaryNumber;
        partial void OndovSecondaryNumberChanging(global::System.String value);
        partial void OndovSecondaryNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docMobileNumber
        {
            get
            {
                return _docMobileNumber;
            }
            set
            {
                OndocMobileNumberChanging(value);
                ReportPropertyChanging("docMobileNumber");
                _docMobileNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docMobileNumber");
                OndocMobileNumberChanged();
            }
        }
        private global::System.String _docMobileNumber;
        partial void OndocMobileNumberChanging(global::System.String value);
        partial void OndocMobileNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docLicence
        {
            get
            {
                return _docLicence;
            }
            set
            {
                OndocLicenceChanging(value);
                ReportPropertyChanging("docLicence");
                _docLicence = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docLicence");
                OndocLicenceChanged();
            }
        }
        private global::System.String _docLicence;
        partial void OndocLicenceChanging(global::System.String value);
        partial void OndocLicenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime docDateCreated
        {
            get
            {
                return _docDateCreated;
            }
            set
            {
                OndocDateCreatedChanging(value);
                ReportPropertyChanging("docDateCreated");
                _docDateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docDateCreated");
                OndocDateCreatedChanged();
            }
        }
        private global::System.DateTime _docDateCreated;
        partial void OndocDateCreatedChanging(global::System.DateTime value);
        partial void OndocDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> docTypeID
        {
            get
            {
                return _docTypeID;
            }
            set
            {
                OndocTypeIDChanging(value);
                ReportPropertyChanging("docTypeID");
                _docTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docTypeID");
                OndocTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _docTypeID;
        partial void OndocTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OndocTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> docActive
        {
            get
            {
                return _docActive;
            }
            set
            {
                OndocActiveChanging(value);
                ReportPropertyChanging("docActive");
                _docActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docActive");
                OndocActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _docActive;
        partial void OndocActiveChanging(Nullable<global::System.Boolean> value);
        partial void OndocActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docDefaultColour
        {
            get
            {
                return _docDefaultColour;
            }
            set
            {
                OndocDefaultColourChanging(value);
                ReportPropertyChanging("docDefaultColour");
                _docDefaultColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docDefaultColour");
                OndocDefaultColourChanged();
            }
        }
        private global::System.String _docDefaultColour;
        partial void OndocDefaultColourChanging(global::System.String value);
        partial void OndocDefaultColourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> docDefault
        {
            get
            {
                return _docDefault;
            }
            set
            {
                OndocDefaultChanging(value);
                ReportPropertyChanging("docDefault");
                _docDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docDefault");
                OndocDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _docDefault;
        partial void OndocDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OndocDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String docLicence2
        {
            get
            {
                return _docLicence2;
            }
            set
            {
                OndocLicence2Changing(value);
                ReportPropertyChanging("docLicence2");
                _docLicence2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("docLicence2");
                OndocLicence2Changed();
            }
        }
        private global::System.String _docLicence2;
        partial void OndocLicence2Changing(global::System.String value);
        partial void OndocLicence2Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "doctorpatient", "patient")]
        public EntityCollection<patient> patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<patient>("PatientManagerModel.doctorpatient", "patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<patient>("PatientManagerModel.doctorpatient", "patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "doctorappointment", "appointment")]
        public EntityCollection<appointment> appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<appointment>("PatientManagerModel.doctorappointment", "appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<appointment>("PatientManagerModel.doctorappointment", "appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "doctordoc_type", "doc_type")]
        public doc_type doc_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doc_type>("PatientManagerModel.doctordoc_type", "doc_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doc_type>("PatientManagerModel.doctordoc_type", "doc_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<doc_type> doc_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doc_type>("PatientManagerModel.doctordoc_type", "doc_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<doc_type>("PatientManagerModel.doctordoc_type", "doc_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "AccountingTotaldoctor", "AccountingTotal")]
        public EntityCollection<AccountingTotal> AccountingTotals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountingTotal>("PatientManagerModel.AccountingTotaldoctor", "AccountingTotal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountingTotal>("PatientManagerModel.AccountingTotaldoctor", "AccountingTotal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "invoicedoctor", "invoice")]
        public EntityCollection<invoice> invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("PatientManagerModel.invoicedoctor", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("PatientManagerModel.invoicedoctor", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "paymentdoctor", "payment")]
        public EntityCollection<payment> payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("PatientManagerModel.paymentdoctor", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("PatientManagerModel.paymentdoctor", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "PatientAccountHistoryViewdoctor", "PatientAccountHistoryView")]
        public EntityCollection<PatientAccountHistoryView> PatientAccountHistoryViews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAccountHistoryView>("PatientManagerModel.PatientAccountHistoryViewdoctor", "PatientAccountHistoryView");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAccountHistoryView>("PatientManagerModel.PatientAccountHistoryViewdoctor", "PatientAccountHistoryView", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="inv_line")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class inv_line : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new inv_line object.
        /// </summary>
        /// <param name="invID">Initial value of the invID property.</param>
        /// <param name="itryID">Initial value of the itryID property.</param>
        /// <param name="itryQty">Initial value of the itryQty property.</param>
        public static inv_line Createinv_line(global::System.Int32 invID, global::System.Int32 itryID, global::System.Int32 itryQty)
        {
            inv_line inv_line = new inv_line();
            inv_line.invID = invID;
            inv_line.itryID = itryID;
            inv_line.itryQty = itryQty;
            return inv_line;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 invID
        {
            get
            {
                return _invID;
            }
            set
            {
                if (_invID != value)
                {
                    OninvIDChanging(value);
                    ReportPropertyChanging("invID");
                    _invID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("invID");
                    OninvIDChanged();
                }
            }
        }
        private global::System.Int32 _invID;
        partial void OninvIDChanging(global::System.Int32 value);
        partial void OninvIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itryID
        {
            get
            {
                return _itryID;
            }
            set
            {
                if (_itryID != value)
                {
                    OnitryIDChanging(value);
                    ReportPropertyChanging("itryID");
                    _itryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("itryID");
                    OnitryIDChanged();
                }
            }
        }
        private global::System.Int32 _itryID;
        partial void OnitryIDChanging(global::System.Int32 value);
        partial void OnitryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itryQty
        {
            get
            {
                return _itryQty;
            }
            set
            {
                OnitryQtyChanging(value);
                ReportPropertyChanging("itryQty");
                _itryQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itryQty");
                OnitryQtyChanged();
            }
        }
        private global::System.Int32 _itryQty;
        partial void OnitryQtyChanging(global::System.Int32 value);
        partial void OnitryQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> linePrice
        {
            get
            {
                return _linePrice;
            }
            set
            {
                OnlinePriceChanging(value);
                ReportPropertyChanging("linePrice");
                _linePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("linePrice");
                OnlinePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _linePrice;
        partial void OnlinePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnlinePriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "invoiceinv_line", "invoice")]
        public invoice invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("PatientManagerModel.invoiceinv_line", "invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("PatientManagerModel.invoiceinv_line", "invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoice> invoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("PatientManagerModel.invoiceinv_line", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoice>("PatientManagerModel.invoiceinv_line", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "inventoryinv_line", "inventory")]
        public inventory inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventory>("PatientManagerModel.inventoryinv_line", "inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventory>("PatientManagerModel.inventoryinv_line", "inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<inventory> inventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventory>("PatientManagerModel.inventoryinv_line", "inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<inventory>("PatientManagerModel.inventoryinv_line", "inventory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new inventory object.
        /// </summary>
        /// <param name="itryID">Initial value of the itryID property.</param>
        /// <param name="itryName">Initial value of the itryName property.</param>
        /// <param name="itryStock">Initial value of the itryStock property.</param>
        public static inventory Createinventory(global::System.Int32 itryID, global::System.String itryName, global::System.Int32 itryStock)
        {
            inventory inventory = new inventory();
            inventory.itryID = itryID;
            inventory.itryName = itryName;
            inventory.itryStock = itryStock;
            return inventory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itryID
        {
            get
            {
                return _itryID;
            }
            set
            {
                if (_itryID != value)
                {
                    OnitryIDChanging(value);
                    ReportPropertyChanging("itryID");
                    _itryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("itryID");
                    OnitryIDChanged();
                }
            }
        }
        private global::System.Int32 _itryID;
        partial void OnitryIDChanging(global::System.Int32 value);
        partial void OnitryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String itryName
        {
            get
            {
                return _itryName;
            }
            set
            {
                OnitryNameChanging(value);
                ReportPropertyChanging("itryName");
                _itryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("itryName");
                OnitryNameChanged();
            }
        }
        private global::System.String _itryName;
        partial void OnitryNameChanging(global::System.String value);
        partial void OnitryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itryDesc
        {
            get
            {
                return _itryDesc;
            }
            set
            {
                OnitryDescChanging(value);
                ReportPropertyChanging("itryDesc");
                _itryDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("itryDesc");
                OnitryDescChanged();
            }
        }
        private global::System.String _itryDesc;
        partial void OnitryDescChanging(global::System.String value);
        partial void OnitryDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> itryCost
        {
            get
            {
                return _itryCost;
            }
            set
            {
                OnitryCostChanging(value);
                ReportPropertyChanging("itryCost");
                _itryCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itryCost");
                OnitryCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _itryCost;
        partial void OnitryCostChanging(Nullable<global::System.Decimal> value);
        partial void OnitryCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> itryMarkup
        {
            get
            {
                return _itryMarkup;
            }
            set
            {
                OnitryMarkupChanging(value);
                ReportPropertyChanging("itryMarkup");
                _itryMarkup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itryMarkup");
                OnitryMarkupChanged();
            }
        }
        private Nullable<global::System.Int32> _itryMarkup;
        partial void OnitryMarkupChanging(Nullable<global::System.Int32> value);
        partial void OnitryMarkupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> itrySellingPrive
        {
            get
            {
                return _itrySellingPrive;
            }
            set
            {
                OnitrySellingPriveChanging(value);
                ReportPropertyChanging("itrySellingPrive");
                _itrySellingPrive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itrySellingPrive");
                OnitrySellingPriveChanged();
            }
        }
        private Nullable<global::System.Decimal> _itrySellingPrive;
        partial void OnitrySellingPriveChanging(Nullable<global::System.Decimal> value);
        partial void OnitrySellingPriveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> itryActive
        {
            get
            {
                return _itryActive;
            }
            set
            {
                OnitryActiveChanging(value);
                ReportPropertyChanging("itryActive");
                _itryActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itryActive");
                OnitryActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _itryActive;
        partial void OnitryActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnitryActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> catID
        {
            get
            {
                return _catID;
            }
            set
            {
                OncatIDChanging(value);
                ReportPropertyChanging("catID");
                _catID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("catID");
                OncatIDChanged();
            }
        }
        private Nullable<global::System.Int32> _catID;
        partial void OncatIDChanging(Nullable<global::System.Int32> value);
        partial void OncatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itryStock
        {
            get
            {
                return _itryStock;
            }
            set
            {
                OnitryStockChanging(value);
                ReportPropertyChanging("itryStock");
                _itryStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itryStock");
                OnitryStockChanged();
            }
        }
        private global::System.Int32 _itryStock;
        partial void OnitryStockChanging(global::System.Int32 value);
        partial void OnitryStockChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "inventoryinv_line", "inv_line")]
        public EntityCollection<inv_line> inv_line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inv_line>("PatientManagerModel.inventoryinv_line", "inv_line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inv_line>("PatientManagerModel.inventoryinv_line", "inv_line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "inventorycategory", "category")]
        public category category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("PatientManagerModel.inventorycategory", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("PatientManagerModel.inventorycategory", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<category> categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("PatientManagerModel.inventorycategory", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<category>("PatientManagerModel.inventorycategory", "category", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoice object.
        /// </summary>
        /// <param name="invID">Initial value of the invID property.</param>
        /// <param name="invDate">Initial value of the invDate property.</param>
        /// <param name="patID">Initial value of the patID property.</param>
        /// <param name="invCommitted">Initial value of the invCommitted property.</param>
        /// <param name="docID">Initial value of the docID property.</param>
        public static invoice Createinvoice(global::System.Int32 invID, global::System.DateTime invDate, global::System.Int32 patID, global::System.Boolean invCommitted, global::System.Int32 docID)
        {
            invoice invoice = new invoice();
            invoice.invID = invID;
            invoice.invDate = invDate;
            invoice.patID = patID;
            invoice.invCommitted = invCommitted;
            invoice.docID = docID;
            return invoice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 invID
        {
            get
            {
                return _invID;
            }
            set
            {
                if (_invID != value)
                {
                    OninvIDChanging(value);
                    ReportPropertyChanging("invID");
                    _invID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("invID");
                    OninvIDChanged();
                }
            }
        }
        private global::System.Int32 _invID;
        partial void OninvIDChanging(global::System.Int32 value);
        partial void OninvIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime invDate
        {
            get
            {
                return _invDate;
            }
            set
            {
                OninvDateChanging(value);
                ReportPropertyChanging("invDate");
                _invDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invDate");
                OninvDateChanged();
            }
        }
        private global::System.DateTime _invDate;
        partial void OninvDateChanging(global::System.DateTime value);
        partial void OninvDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patID
        {
            get
            {
                return _patID;
            }
            set
            {
                OnpatIDChanging(value);
                ReportPropertyChanging("patID");
                _patID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patID");
                OnpatIDChanged();
            }
        }
        private global::System.Int32 _patID;
        partial void OnpatIDChanging(global::System.Int32 value);
        partial void OnpatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invStatus
        {
            get
            {
                return _invStatus;
            }
            set
            {
                OninvStatusChanging(value);
                ReportPropertyChanging("invStatus");
                _invStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invStatus");
                OninvStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _invStatus;
        partial void OninvStatusChanging(Nullable<global::System.Int32> value);
        partial void OninvStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean invCommitted
        {
            get
            {
                return _invCommitted;
            }
            set
            {
                OninvCommittedChanging(value);
                ReportPropertyChanging("invCommitted");
                _invCommitted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invCommitted");
                OninvCommittedChanged();
            }
        }
        private global::System.Boolean _invCommitted;
        partial void OninvCommittedChanging(global::System.Boolean value);
        partial void OninvCommittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docID
        {
            get
            {
                return _docID;
            }
            set
            {
                OndocIDChanging(value);
                ReportPropertyChanging("docID");
                _docID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docID");
                OndocIDChanged();
            }
        }
        private global::System.Int32 _docID;
        partial void OndocIDChanging(global::System.Int32 value);
        partial void OndocIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "invoiceinv_line", "inv_line")]
        public EntityCollection<inv_line> inv_line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inv_line>("PatientManagerModel.invoiceinv_line", "inv_line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inv_line>("PatientManagerModel.invoiceinv_line", "inv_line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "invoicepatient", "patient")]
        public patient patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.invoicepatient", "patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.invoicepatient", "patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<patient> patientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.invoicepatient", "patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<patient>("PatientManagerModel.invoicepatient", "patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "invoicedoctor", "doctor")]
        public doctor doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.invoicedoctor", "doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.invoicedoctor", "doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<doctor> doctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.invoicedoctor", "doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<doctor>("PatientManagerModel.invoicedoctor", "doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "paymentinvoice", "payment")]
        public EntityCollection<payment> payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("PatientManagerModel.paymentinvoice", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("PatientManagerModel.paymentinvoice", "payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="loginuser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class loginuser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new loginuser object.
        /// </summary>
        /// <param name="usrName">Initial value of the usrName property.</param>
        /// <param name="usrPassword">Initial value of the usrPassword property.</param>
        /// <param name="usrDateCreated">Initial value of the usrDateCreated property.</param>
        /// <param name="usrLastLogin">Initial value of the usrLastLogin property.</param>
        /// <param name="usrActive">Initial value of the usrActive property.</param>
        public static loginuser Createloginuser(global::System.String usrName, global::System.String usrPassword, global::System.DateTime usrDateCreated, global::System.DateTime usrLastLogin, global::System.Boolean usrActive)
        {
            loginuser loginuser = new loginuser();
            loginuser.usrName = usrName;
            loginuser.usrPassword = usrPassword;
            loginuser.usrDateCreated = usrDateCreated;
            loginuser.usrLastLogin = usrLastLogin;
            loginuser.usrActive = usrActive;
            return loginuser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String usrName
        {
            get
            {
                return _usrName;
            }
            set
            {
                if (_usrName != value)
                {
                    OnusrNameChanging(value);
                    ReportPropertyChanging("usrName");
                    _usrName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("usrName");
                    OnusrNameChanged();
                }
            }
        }
        private global::System.String _usrName;
        partial void OnusrNameChanging(global::System.String value);
        partial void OnusrNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String usrPassword
        {
            get
            {
                return _usrPassword;
            }
            set
            {
                OnusrPasswordChanging(value);
                ReportPropertyChanging("usrPassword");
                _usrPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("usrPassword");
                OnusrPasswordChanged();
            }
        }
        private global::System.String _usrPassword;
        partial void OnusrPasswordChanging(global::System.String value);
        partial void OnusrPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime usrDateCreated
        {
            get
            {
                return _usrDateCreated;
            }
            set
            {
                OnusrDateCreatedChanging(value);
                ReportPropertyChanging("usrDateCreated");
                _usrDateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usrDateCreated");
                OnusrDateCreatedChanged();
            }
        }
        private global::System.DateTime _usrDateCreated;
        partial void OnusrDateCreatedChanging(global::System.DateTime value);
        partial void OnusrDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime usrLastLogin
        {
            get
            {
                return _usrLastLogin;
            }
            set
            {
                OnusrLastLoginChanging(value);
                ReportPropertyChanging("usrLastLogin");
                _usrLastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usrLastLogin");
                OnusrLastLoginChanged();
            }
        }
        private global::System.DateTime _usrLastLogin;
        partial void OnusrLastLoginChanging(global::System.DateTime value);
        partial void OnusrLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean usrActive
        {
            get
            {
                return _usrActive;
            }
            set
            {
                OnusrActiveChanging(value);
                ReportPropertyChanging("usrActive");
                _usrActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usrActive");
                OnusrActiveChanged();
            }
        }
        private global::System.Boolean _usrActive;
        partial void OnusrActiveChanging(global::System.Boolean value);
        partial void OnusrActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new patient object.
        /// </summary>
        /// <param name="patID">Initial value of the patID property.</param>
        /// <param name="patFirstName">Initial value of the patFirstName property.</param>
        /// <param name="patLastName">Initial value of the patLastName property.</param>
        /// <param name="patDateCreate">Initial value of the patDateCreate property.</param>
        /// <param name="docID">Initial value of the docID property.</param>
        /// <param name="patActive">Initial value of the patActive property.</param>
        public static patient Createpatient(global::System.Int32 patID, global::System.String patFirstName, global::System.String patLastName, global::System.DateTime patDateCreate, global::System.Int32 docID, global::System.Boolean patActive)
        {
            patient patient = new patient();
            patient.patID = patID;
            patient.patFirstName = patFirstName;
            patient.patLastName = patLastName;
            patient.patDateCreate = patDateCreate;
            patient.docID = docID;
            patient.patActive = patActive;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patID
        {
            get
            {
                return _patID;
            }
            set
            {
                if (_patID != value)
                {
                    OnpatIDChanging(value);
                    ReportPropertyChanging("patID");
                    _patID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("patID");
                    OnpatIDChanged();
                }
            }
        }
        private global::System.Int32 _patID;
        partial void OnpatIDChanging(global::System.Int32 value);
        partial void OnpatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String patFirstName
        {
            get
            {
                return _patFirstName;
            }
            set
            {
                OnpatFirstNameChanging(value);
                ReportPropertyChanging("patFirstName");
                _patFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("patFirstName");
                OnpatFirstNameChanged();
            }
        }
        private global::System.String _patFirstName;
        partial void OnpatFirstNameChanging(global::System.String value);
        partial void OnpatFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String patLastName
        {
            get
            {
                return _patLastName;
            }
            set
            {
                OnpatLastNameChanging(value);
                ReportPropertyChanging("patLastName");
                _patLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("patLastName");
                OnpatLastNameChanged();
            }
        }
        private global::System.String _patLastName;
        partial void OnpatLastNameChanging(global::System.String value);
        partial void OnpatLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime patDateCreate
        {
            get
            {
                return _patDateCreate;
            }
            set
            {
                OnpatDateCreateChanging(value);
                ReportPropertyChanging("patDateCreate");
                _patDateCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patDateCreate");
                OnpatDateCreateChanged();
            }
        }
        private global::System.DateTime _patDateCreate;
        partial void OnpatDateCreateChanging(global::System.DateTime value);
        partial void OnpatDateCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> patSex
        {
            get
            {
                return _patSex;
            }
            set
            {
                OnpatSexChanging(value);
                ReportPropertyChanging("patSex");
                _patSex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patSex");
                OnpatSexChanged();
            }
        }
        private Nullable<global::System.Boolean> _patSex;
        partial void OnpatSexChanging(Nullable<global::System.Boolean> value);
        partial void OnpatSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patOHIP
        {
            get
            {
                return _patOHIP;
            }
            set
            {
                OnpatOHIPChanging(value);
                ReportPropertyChanging("patOHIP");
                _patOHIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patOHIP");
                OnpatOHIPChanged();
            }
        }
        private global::System.String _patOHIP;
        partial void OnpatOHIPChanging(global::System.String value);
        partial void OnpatOHIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patHealthCard
        {
            get
            {
                return _patHealthCard;
            }
            set
            {
                OnpatHealthCardChanging(value);
                ReportPropertyChanging("patHealthCard");
                _patHealthCard = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patHealthCard");
                OnpatHealthCardChanged();
            }
        }
        private global::System.String _patHealthCard;
        partial void OnpatHealthCardChanging(global::System.String value);
        partial void OnpatHealthCardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patInsuranceNum
        {
            get
            {
                return _patInsuranceNum;
            }
            set
            {
                OnpatInsuranceNumChanging(value);
                ReportPropertyChanging("patInsuranceNum");
                _patInsuranceNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patInsuranceNum");
                OnpatInsuranceNumChanged();
            }
        }
        private global::System.String _patInsuranceNum;
        partial void OnpatInsuranceNumChanging(global::System.String value);
        partial void OnpatInsuranceNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patAddress
        {
            get
            {
                return _patAddress;
            }
            set
            {
                OnpatAddressChanging(value);
                ReportPropertyChanging("patAddress");
                _patAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patAddress");
                OnpatAddressChanged();
            }
        }
        private global::System.String _patAddress;
        partial void OnpatAddressChanging(global::System.String value);
        partial void OnpatAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patAddress2
        {
            get
            {
                return _patAddress2;
            }
            set
            {
                OnpatAddress2Changing(value);
                ReportPropertyChanging("patAddress2");
                _patAddress2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patAddress2");
                OnpatAddress2Changed();
            }
        }
        private global::System.String _patAddress2;
        partial void OnpatAddress2Changing(global::System.String value);
        partial void OnpatAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patPhoneNumber
        {
            get
            {
                return _patPhoneNumber;
            }
            set
            {
                OnpatPhoneNumberChanging(value);
                ReportPropertyChanging("patPhoneNumber");
                _patPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patPhoneNumber");
                OnpatPhoneNumberChanged();
            }
        }
        private global::System.String _patPhoneNumber;
        partial void OnpatPhoneNumberChanging(global::System.String value);
        partial void OnpatPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patMobileNumber
        {
            get
            {
                return _patMobileNumber;
            }
            set
            {
                OnpatMobileNumberChanging(value);
                ReportPropertyChanging("patMobileNumber");
                _patMobileNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patMobileNumber");
                OnpatMobileNumberChanged();
            }
        }
        private global::System.String _patMobileNumber;
        partial void OnpatMobileNumberChanging(global::System.String value);
        partial void OnpatMobileNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patSecNumber
        {
            get
            {
                return _patSecNumber;
            }
            set
            {
                OnpatSecNumberChanging(value);
                ReportPropertyChanging("patSecNumber");
                _patSecNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patSecNumber");
                OnpatSecNumberChanged();
            }
        }
        private global::System.String _patSecNumber;
        partial void OnpatSecNumberChanging(global::System.String value);
        partial void OnpatSecNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patPCode
        {
            get
            {
                return _patPCode;
            }
            set
            {
                OnpatPCodeChanging(value);
                ReportPropertyChanging("patPCode");
                _patPCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patPCode");
                OnpatPCodeChanged();
            }
        }
        private global::System.String _patPCode;
        partial void OnpatPCodeChanging(global::System.String value);
        partial void OnpatPCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> patBirthday
        {
            get
            {
                return _patBirthday;
            }
            set
            {
                OnpatBirthdayChanging(value);
                ReportPropertyChanging("patBirthday");
                _patBirthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patBirthday");
                OnpatBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _patBirthday;
        partial void OnpatBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnpatBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patReferedBy
        {
            get
            {
                return _patReferedBy;
            }
            set
            {
                OnpatReferedByChanging(value);
                ReportPropertyChanging("patReferedBy");
                _patReferedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patReferedBy");
                OnpatReferedByChanged();
            }
        }
        private global::System.String _patReferedBy;
        partial void OnpatReferedByChanging(global::System.String value);
        partial void OnpatReferedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patCity
        {
            get
            {
                return _patCity;
            }
            set
            {
                OnpatCityChanging(value);
                ReportPropertyChanging("patCity");
                _patCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patCity");
                OnpatCityChanged();
            }
        }
        private global::System.String _patCity;
        partial void OnpatCityChanging(global::System.String value);
        partial void OnpatCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso
        {
            get
            {
                return _iso;
            }
            set
            {
                OnisoChanging(value);
                ReportPropertyChanging("iso");
                _iso = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iso");
                OnisoChanged();
            }
        }
        private global::System.String _iso;
        partial void OnisoChanging(global::System.String value);
        partial void OnisoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patProv
        {
            get
            {
                return _patProv;
            }
            set
            {
                OnpatProvChanging(value);
                ReportPropertyChanging("patProv");
                _patProv = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patProv");
                OnpatProvChanged();
            }
        }
        private global::System.String _patProv;
        partial void OnpatProvChanging(global::System.String value);
        partial void OnpatProvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patNotes
        {
            get
            {
                return _patNotes;
            }
            set
            {
                OnpatNotesChanging(value);
                ReportPropertyChanging("patNotes");
                _patNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patNotes");
                OnpatNotesChanged();
            }
        }
        private global::System.String _patNotes;
        partial void OnpatNotesChanging(global::System.String value);
        partial void OnpatNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docID
        {
            get
            {
                return _docID;
            }
            set
            {
                OndocIDChanging(value);
                ReportPropertyChanging("docID");
                _docID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docID");
                OndocIDChanged();
            }
        }
        private global::System.Int32 _docID;
        partial void OndocIDChanging(global::System.Int32 value);
        partial void OndocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean patActive
        {
            get
            {
                return _patActive;
            }
            set
            {
                OnpatActiveChanging(value);
                ReportPropertyChanging("patActive");
                _patActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patActive");
                OnpatActiveChanged();
            }
        }
        private global::System.Boolean _patActive;
        partial void OnpatActiveChanging(global::System.Boolean value);
        partial void OnpatActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patInsuranceProv
        {
            get
            {
                return _patInsuranceProv;
            }
            set
            {
                OnpatInsuranceProvChanging(value);
                ReportPropertyChanging("patInsuranceProv");
                _patInsuranceProv = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patInsuranceProv");
                OnpatInsuranceProvChanged();
            }
        }
        private global::System.String _patInsuranceProv;
        partial void OnpatInsuranceProvChanging(global::System.String value);
        partial void OnpatInsuranceProvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patFlag
        {
            get
            {
                return _patFlag;
            }
            set
            {
                OnpatFlagChanging(value);
                ReportPropertyChanging("patFlag");
                _patFlag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patFlag");
                OnpatFlagChanged();
            }
        }
        private global::System.String _patFlag;
        partial void OnpatFlagChanging(global::System.String value);
        partial void OnpatFlagChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "doctorpatient", "doctor")]
        public doctor doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.doctorpatient", "doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.doctorpatient", "doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<doctor> doctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.doctorpatient", "doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<doctor>("PatientManagerModel.doctorpatient", "doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "patientcountry", "country")]
        public country country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("PatientManagerModel.patientcountry", "country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("PatientManagerModel.patientcountry", "country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<country> countryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("PatientManagerModel.patientcountry", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<country>("PatientManagerModel.patientcountry", "country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "patientappointment", "appointment")]
        public EntityCollection<appointment> appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<appointment>("PatientManagerModel.patientappointment", "appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<appointment>("PatientManagerModel.patientappointment", "appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "invoicepatient", "invoice")]
        public EntityCollection<invoice> invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("PatientManagerModel.invoicepatient", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("PatientManagerModel.invoicepatient", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "paymentpatient", "payment")]
        public EntityCollection<payment> payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("PatientManagerModel.paymentpatient", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("PatientManagerModel.paymentpatient", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "PatientAccountHistoryViewpatient", "PatientAccountHistoryView")]
        public EntityCollection<PatientAccountHistoryView> PatientAccountHistoryViews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAccountHistoryView>("PatientManagerModel.PatientAccountHistoryViewpatient", "PatientAccountHistoryView");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAccountHistoryView>("PatientManagerModel.PatientAccountHistoryViewpatient", "PatientAccountHistoryView", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="PatientAccountHistoryView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientAccountHistoryView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientAccountHistoryView object.
        /// </summary>
        /// <param name="patID">Initial value of the patID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="docID">Initial value of the docID property.</param>
        public static PatientAccountHistoryView CreatePatientAccountHistoryView(global::System.Int32 patID, global::System.String type, global::System.Int32 docID)
        {
            PatientAccountHistoryView patientAccountHistoryView = new PatientAccountHistoryView();
            patientAccountHistoryView.patID = patID;
            patientAccountHistoryView.Type = type;
            patientAccountHistoryView.docID = docID;
            return patientAccountHistoryView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patID
        {
            get
            {
                return _patID;
            }
            set
            {
                OnpatIDChanging(value);
                ReportPropertyChanging("patID");
                _patID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patID");
                OnpatIDChanged();
            }
        }
        private global::System.Int32 _patID;
        partial void OnpatIDChanging(global::System.Int32 value);
        partial void OnpatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> itryQty
        {
            get
            {
                return _itryQty;
            }
            set
            {
                OnitryQtyChanging(value);
                ReportPropertyChanging("itryQty");
                _itryQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itryQty");
                OnitryQtyChanged();
            }
        }
        private Nullable<global::System.Int32> _itryQty;
        partial void OnitryQtyChanging(Nullable<global::System.Int32> value);
        partial void OnitryQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docID
        {
            get
            {
                return _docID;
            }
            set
            {
                if (_docID != value)
                {
                    OndocIDChanging(value);
                    ReportPropertyChanging("docID");
                    _docID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("docID");
                    OndocIDChanged();
                }
            }
        }
        private global::System.Int32 _docID;
        partial void OndocIDChanging(global::System.Int32 value);
        partial void OndocIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "PatientAccountHistoryViewpatient", "patient")]
        public patient patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.PatientAccountHistoryViewpatient", "patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.PatientAccountHistoryViewpatient", "patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<patient> patientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.PatientAccountHistoryViewpatient", "patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<patient>("PatientManagerModel.PatientAccountHistoryViewpatient", "patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "PatientAccountHistoryViewdoctor", "doctor")]
        public doctor doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.PatientAccountHistoryViewdoctor", "doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.PatientAccountHistoryViewdoctor", "doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<doctor> doctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.PatientAccountHistoryViewdoctor", "doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<doctor>("PatientManagerModel.PatientAccountHistoryViewdoctor", "doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new payment object.
        /// </summary>
        /// <param name="payID">Initial value of the payID property.</param>
        /// <param name="payAmount">Initial value of the payAmount property.</param>
        /// <param name="payDate">Initial value of the payDate property.</param>
        /// <param name="ptID">Initial value of the ptID property.</param>
        /// <param name="patID">Initial value of the patID property.</param>
        /// <param name="docID">Initial value of the docID property.</param>
        public static payment Createpayment(global::System.Int32 payID, global::System.Decimal payAmount, global::System.DateTime payDate, global::System.Int32 ptID, global::System.Int32 patID, global::System.Int32 docID)
        {
            payment payment = new payment();
            payment.payID = payID;
            payment.payAmount = payAmount;
            payment.payDate = payDate;
            payment.ptID = ptID;
            payment.patID = patID;
            payment.docID = docID;
            return payment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 payID
        {
            get
            {
                return _payID;
            }
            set
            {
                if (_payID != value)
                {
                    OnpayIDChanging(value);
                    ReportPropertyChanging("payID");
                    _payID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("payID");
                    OnpayIDChanged();
                }
            }
        }
        private global::System.Int32 _payID;
        partial void OnpayIDChanging(global::System.Int32 value);
        partial void OnpayIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal payAmount
        {
            get
            {
                return _payAmount;
            }
            set
            {
                OnpayAmountChanging(value);
                ReportPropertyChanging("payAmount");
                _payAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payAmount");
                OnpayAmountChanged();
            }
        }
        private global::System.Decimal _payAmount;
        partial void OnpayAmountChanging(global::System.Decimal value);
        partial void OnpayAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime payDate
        {
            get
            {
                return _payDate;
            }
            set
            {
                OnpayDateChanging(value);
                ReportPropertyChanging("payDate");
                _payDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payDate");
                OnpayDateChanged();
            }
        }
        private global::System.DateTime _payDate;
        partial void OnpayDateChanging(global::System.DateTime value);
        partial void OnpayDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ptID
        {
            get
            {
                return _ptID;
            }
            set
            {
                OnptIDChanging(value);
                ReportPropertyChanging("ptID");
                _ptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ptID");
                OnptIDChanged();
            }
        }
        private global::System.Int32 _ptID;
        partial void OnptIDChanging(global::System.Int32 value);
        partial void OnptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patID
        {
            get
            {
                return _patID;
            }
            set
            {
                OnpatIDChanging(value);
                ReportPropertyChanging("patID");
                _patID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patID");
                OnpatIDChanged();
            }
        }
        private global::System.Int32 _patID;
        partial void OnpatIDChanging(global::System.Int32 value);
        partial void OnpatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> payVoid
        {
            get
            {
                return _payVoid;
            }
            set
            {
                OnpayVoidChanging(value);
                ReportPropertyChanging("payVoid");
                _payVoid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payVoid");
                OnpayVoidChanged();
            }
        }
        private Nullable<global::System.Boolean> _payVoid;
        partial void OnpayVoidChanging(Nullable<global::System.Boolean> value);
        partial void OnpayVoidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 docID
        {
            get
            {
                return _docID;
            }
            set
            {
                OndocIDChanging(value);
                ReportPropertyChanging("docID");
                _docID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("docID");
                OndocIDChanged();
            }
        }
        private global::System.Int32 _docID;
        partial void OndocIDChanging(global::System.Int32 value);
        partial void OndocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invID
        {
            get
            {
                return _invID;
            }
            set
            {
                OninvIDChanging(value);
                ReportPropertyChanging("invID");
                _invID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invID");
                OninvIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invID;
        partial void OninvIDChanging(Nullable<global::System.Int32> value);
        partial void OninvIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "paymentpatient", "patient")]
        public patient patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.paymentpatient", "patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.paymentpatient", "patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<patient> patientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<patient>("PatientManagerModel.paymentpatient", "patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<patient>("PatientManagerModel.paymentpatient", "patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "payment_typepayment", "payment_type")]
        public payment_type payment_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment_type>("PatientManagerModel.payment_typepayment", "payment_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment_type>("PatientManagerModel.payment_typepayment", "payment_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<payment_type> payment_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment_type>("PatientManagerModel.payment_typepayment", "payment_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<payment_type>("PatientManagerModel.payment_typepayment", "payment_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "paymentdoctor", "doctor")]
        public doctor doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.paymentdoctor", "doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.paymentdoctor", "doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<doctor> doctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<doctor>("PatientManagerModel.paymentdoctor", "doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<doctor>("PatientManagerModel.paymentdoctor", "doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "paymentinvoice", "invoice")]
        public invoice invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("PatientManagerModel.paymentinvoice", "invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("PatientManagerModel.paymentinvoice", "invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoice> invoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("PatientManagerModel.paymentinvoice", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoice>("PatientManagerModel.paymentinvoice", "invoice", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="payment_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class payment_type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new payment_type object.
        /// </summary>
        /// <param name="ptID">Initial value of the ptID property.</param>
        public static payment_type Createpayment_type(global::System.Int32 ptID)
        {
            payment_type payment_type = new payment_type();
            payment_type.ptID = ptID;
            return payment_type;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ptID
        {
            get
            {
                return _ptID;
            }
            set
            {
                if (_ptID != value)
                {
                    OnptIDChanging(value);
                    ReportPropertyChanging("ptID");
                    _ptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ptID");
                    OnptIDChanged();
                }
            }
        }
        private global::System.Int32 _ptID;
        partial void OnptIDChanging(global::System.Int32 value);
        partial void OnptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ptName
        {
            get
            {
                return _ptName;
            }
            set
            {
                OnptNameChanging(value);
                ReportPropertyChanging("ptName");
                _ptName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ptName");
                OnptNameChanged();
            }
        }
        private global::System.String _ptName;
        partial void OnptNameChanging(global::System.String value);
        partial void OnptNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientManagerModel", "payment_typepayment", "payment")]
        public EntityCollection<payment> payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("PatientManagerModel.payment_typepayment", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("PatientManagerModel.payment_typepayment", "payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="reminder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class reminder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new reminder object.
        /// </summary>
        /// <param name="remID">Initial value of the remID property.</param>
        /// <param name="remDateCreated">Initial value of the remDateCreated property.</param>
        /// <param name="remTargetDate">Initial value of the remTargetDate property.</param>
        public static reminder Createreminder(global::System.Int32 remID, global::System.DateTime remDateCreated, global::System.DateTime remTargetDate)
        {
            reminder reminder = new reminder();
            reminder.remID = remID;
            reminder.remDateCreated = remDateCreated;
            reminder.remTargetDate = remTargetDate;
            return reminder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 remID
        {
            get
            {
                return _remID;
            }
            set
            {
                if (_remID != value)
                {
                    OnremIDChanging(value);
                    ReportPropertyChanging("remID");
                    _remID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("remID");
                    OnremIDChanged();
                }
            }
        }
        private global::System.Int32 _remID;
        partial void OnremIDChanging(global::System.Int32 value);
        partial void OnremIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime remDateCreated
        {
            get
            {
                return _remDateCreated;
            }
            set
            {
                OnremDateCreatedChanging(value);
                ReportPropertyChanging("remDateCreated");
                _remDateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("remDateCreated");
                OnremDateCreatedChanged();
            }
        }
        private global::System.DateTime _remDateCreated;
        partial void OnremDateCreatedChanging(global::System.DateTime value);
        partial void OnremDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime remTargetDate
        {
            get
            {
                return _remTargetDate;
            }
            set
            {
                OnremTargetDateChanging(value);
                ReportPropertyChanging("remTargetDate");
                _remTargetDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("remTargetDate");
                OnremTargetDateChanged();
            }
        }
        private global::System.DateTime _remTargetDate;
        partial void OnremTargetDateChanging(global::System.DateTime value);
        partial void OnremTargetDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remNote
        {
            get
            {
                return _remNote;
            }
            set
            {
                OnremNoteChanging(value);
                ReportPropertyChanging("remNote");
                _remNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remNote");
                OnremNoteChanged();
            }
        }
        private global::System.String _remNote;
        partial void OnremNoteChanging(global::System.String value);
        partial void OnremNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remInterval
        {
            get
            {
                return _remInterval;
            }
            set
            {
                OnremIntervalChanging(value);
                ReportPropertyChanging("remInterval");
                _remInterval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("remInterval");
                OnremIntervalChanged();
            }
        }
        private Nullable<global::System.Int32> _remInterval;
        partial void OnremIntervalChanging(Nullable<global::System.Int32> value);
        partial void OnremIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> remActive
        {
            get
            {
                return _remActive;
            }
            set
            {
                OnremActiveChanging(value);
                ReportPropertyChanging("remActive");
                _remActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("remActive");
                OnremActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _remActive;
        partial void OnremActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnremActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientManagerModel", Name="usr_reminder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usr_reminder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usr_reminder object.
        /// </summary>
        /// <param name="usrName">Initial value of the usrName property.</param>
        /// <param name="remID">Initial value of the remID property.</param>
        public static usr_reminder Createusr_reminder(global::System.String usrName, global::System.Int32 remID)
        {
            usr_reminder usr_reminder = new usr_reminder();
            usr_reminder.usrName = usrName;
            usr_reminder.remID = remID;
            return usr_reminder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String usrName
        {
            get
            {
                return _usrName;
            }
            set
            {
                if (_usrName != value)
                {
                    OnusrNameChanging(value);
                    ReportPropertyChanging("usrName");
                    _usrName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("usrName");
                    OnusrNameChanged();
                }
            }
        }
        private global::System.String _usrName;
        partial void OnusrNameChanging(global::System.String value);
        partial void OnusrNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 remID
        {
            get
            {
                return _remID;
            }
            set
            {
                if (_remID != value)
                {
                    OnremIDChanging(value);
                    ReportPropertyChanging("remID");
                    _remID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("remID");
                    OnremIDChanged();
                }
            }
        }
        private global::System.Int32 _remID;
        partial void OnremIDChanging(global::System.Int32 value);
        partial void OnremIDChanged();

        #endregion
    
    }

    #endregion
    
}
